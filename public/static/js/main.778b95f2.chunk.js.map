{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendario-mensajes-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarioApp.js","reportWebVitals.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","mensajes","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlusOne","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","ariaHideApp","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","messages","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","Autenticado","Component","component","rest","location","pathname","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarioApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.778b95f2.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\nconst fetchSinToken = (endpoint, data , method = 'GET') => {\r\n    const url= `${baseUrl}/${endpoint}`;\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\nconst fetchConToken = (endpoint, data , method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '' ; \r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token \r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types = {\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n    //Events\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout : '[event] Logout event',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event]  Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n    \r\n    //Auth\r\n   \r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth]  Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start Token renew',\r\n    authLogout: '[auth] Logout',\r\n} ","import moment from 'moment';\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate()\r\n        })\r\n    );\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n        const {uid, name} = getState().auth; \r\n        try {\r\n            const resp = await fetchConToken('events', event , 'POST');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch(eventAddNew(event))\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n       \r\n    }\r\n};\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event \r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event \r\n});\r\n\r\nexport const eventClearActiveEvent = ( ) => ({\r\n    type: types.eventClearActiveEvent\r\n})\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = fetchConToken(`events/${event.id}` ,event , 'PUT');\r\n            const body = await resp.json();\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event));\r\n            }else{\r\n                Swal.fire('Error' , body.msg ,'error')\r\n            }   \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\n\r\nexport const eventStartDelete = ( ) => {\r\n    return async (dispatch, getState) => {\r\n        const {id} = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`, {} , 'DELETE');\r\n            const body = await resp.json();\r\n            if(body.ok){\r\n                dispatch(eventDeleted());\r\n            }else{\r\n                Swal.fire('Error' , body.msg ,'error')\r\n            }   \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = ( ) => ({\r\n    type: types.eventDeleted\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n           const resp = await fetchConToken('events');\r\n           const body= await resp.json();\r\n           const events = prepareEvents( body.eventos);\r\n           dispatch(eventLoaded(events))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events ) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n}) \r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = ( email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date' , new Date().getTime()); \r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error' , body.msg , 'error');\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (name, email, password ) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', {name, email, password, }, 'POST');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date' , new Date().getTime()); \r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }))\r\n        } else {\r\n            Swal.fire('Error' , body.msg , 'error');\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date' , new Date().getTime()); \r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }))\r\n        } else {\r\n            \r\n            dispatch(checkingFinish())\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish,\r\n\r\n})\r\n\r\n\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch)=> {\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch()\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail:'',\r\n        lPassword:''\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName:'',\r\n        rEmail:'',\r\n        rPassword1:'',\r\n        rPassword2:''\r\n    });\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues; \r\n    const {lEmail, lPassword} = formLoginValues;\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword))\r\n    }\r\n\r\n    const handleRegister= (e) => {\r\n        e.preventDefault();\r\n        if (rPassword1 !== rPassword2) {\r\n            Swal.fire('Error', 'Las contraseñas deben de ser iguales ','error')\r\n        }\r\n        dispatch(startRegister(rName, rEmail, rPassword1))\r\n    }\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo Electrónico\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange= {handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange= {handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo Electrónico\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    const {name} = useSelector(state => state.auth);\r\n    const dispatch = useDispatch()\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\" >\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const mensajes = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const {title, user} =event;\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span>- {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = ( ) => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = ( ) => ({\r\n    type: types.uiCloseModal\r\n})","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)'\r\n  }\r\n};\r\nif (process.env.NODE_ENV !=='test') {\r\n  Modal.setAppElement('#root');\r\n}  \r\n\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlusOne = now.clone().add(1, 'hours');\r\nconst initEvent = {\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: nowPlusOne.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n  const { modalOpen } = useSelector(state => state.ui);\r\n  const { activeEvent } = useSelector(state => state.calendar)\r\n  const dispatch = useDispatch();\r\n  const [dateStart, setDateStart] = useState(now.toDate());\r\n  const [dateEnd, setDateEnd] = useState(nowPlusOne.toDate());\r\n  const [titleValid, setTitleValid] = useState(true)\r\n\r\n  const [formValues, setFormValues] = useState(initEvent)\r\n  const { notes, title, start, end } = formValues;\r\n\r\n  useEffect(() => {\r\n    if (activeEvent) {\r\n      setFormValues(activeEvent)\r\n    }else {\r\n        setFormValues(initEvent)\r\n    }\r\n  }, [activeEvent, setFormValues])\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value\r\n    })\r\n  }\r\n  const closeModal = () => {\r\n    dispatch(uiCloseModal());\r\n    dispatch(eventClearActiveEvent())\r\n    setFormValues(initEvent);\r\n  }\r\n  const handleStartDateChange = (e) => {\r\n    setDateStart(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      start: e\r\n    })\r\n  }\r\n  const handleEndDateChange = (e) => {\r\n    setDateEnd(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      end: e\r\n    })\r\n  }\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    const momentStart = moment(start);\r\n    const momentEnd = moment(end)\r\n    if (momentStart.isSameOrAfter(momentEnd)) {\r\n      return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error');\r\n    }\r\n    if (title.trim().length < 2) {\r\n      return setTitleValid(false);\r\n    }\r\n\r\n    if (activeEvent) {\r\n      dispatch(eventStartUpdate(formValues))\r\n    } else {\r\n      dispatch(eventStartAddNew(formValues));\r\n    }\r\n\r\n    setTitleValid(true);\r\n    closeModal();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={modalOpen}\r\n      /*   onAfterOpen={afterOpenModal}*/\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      closeTimeoutMS={200}\r\n      className=\"modal\"\r\n      overlayClassName=\"modal-fondo\"\r\n      ariaHideApp={!process.env.NODE_ENV === 'test'}\r\n    >\r\n      <h1> {(activeEvent) ? 'Editar Evento ' : 'Nuevo Evento'}  </h1>\r\n      <hr />\r\n      <form className=\"container\" onSubmit={handleSubmitForm}>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora inicio</label>\r\n          <DateTimePicker\r\n            onChange={handleStartDateChange}\r\n            value={dateStart}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora fin</label>\r\n          <DateTimePicker\r\n            onChange={handleEndDateChange}\r\n            minDate={dateStart}\r\n            value={dateEnd}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label>Titulo y notas</label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${!titleValid && 'is-invalid'}`}\r\n            placeholder=\"Título del evento\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={handleInputChange}\r\n            autoComplete=\"off\"\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-primary btn-block\"\r\n        >\r\n          <i className=\"far fa-save\"></i>\r\n          <span> Guardar</span>\r\n        </button>\r\n\r\n      </form>\r\n    </Modal>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch()\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n    return (\r\n        <button className=\"btn btn-primary fab\" onClick={handleClickNew}>\r\n            <i className=\"fas fa-plus\">\r\n\r\n            </i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events'\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch()\r\n    const handleDelete = ( ) => {\r\n        dispatch(eventStartDelete())\r\n    }   \r\n    return (\r\n       \r\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete} >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span>Borrar Evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState, useEffect} from 'react';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport   'moment/locale/es'\r\nimport { Navbar } from '../ui/Navbar';\r\nimport  'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { mensajes } from '../../helpers/calendario-mensajes-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nmoment.locale('es')\r\nconst localizer = momentLocalizer(moment);\r\n \r\nexport const CalendarScreen = () => {\r\n  \r\n    const dispatch = useDispatch();\r\n    //leer del store los eventos\r\n    const {events, activeEvent} = useSelector(state => state.calendar);\r\n    const {uid} = useSelector(state => state.auth)\r\n    \r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month'  );\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch])\r\n    \r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n       \r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent())\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return{\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={mensajes}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{event: CalendarEvent}}\r\n            />\r\n            <AddNewFab/>\r\n            {\r\n                (activeEvent)  && <DeleteEventFab/>\r\n            }\r\n            \r\n            <CalendarModal/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({Autenticado, component: Component, ...rest}) => {\r\n    \r\n    localStorage.setItem('lastPath',  rest.location.pathname); \r\n    return (\r\n        <Route { ...rest} \r\n            component={(props) => (\r\n                (Autenticado) \r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/login\" />)\r\n            )}\r\n        /> \r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    Autenticado: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nexport const PublicRoute = ({Autenticado, component: Component, ...rest}) => {\r\n    return (\r\n        <Route { ...rest} \r\n        component={(props) => (\r\n            (!Autenticado) \r\n                ? (<Component {...props} />)\r\n                : (<Redirect to=\"/\" />)\r\n        )}\r\n    /> \r\n    )\r\n}\r\nPublicRoute.propTypes = {\r\n    Autenticado: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth);\r\n    useEffect(() => {\r\n        dispatch(startChecking())\r\n    }, [dispatch])\r\n\r\n    if(checking){\r\n        return (<h5>Espere</h5>); \r\n    }\r\n\r\n    return (\r\n\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute exact path=\"/login\" component={LoginScreen} Autenticado={!!uid} /> \r\n                    \r\n                    <PrivateRoute exact path=\"/\" component={CalendarScreen}  Autenticado={!!uid}/>\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    /* uid: null,\r\n    name: null */\r\n}\r\n\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { types } from '../types/types';\r\nconst initialState = {\r\n    events: [\r\n\r\n    ],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\nconst initialState = {\r\n    modalOpen: false,\r\n\r\n}\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            \r\n            return{\r\n                ...state, \r\n                modalOpen: true\r\n            };\r\n        case types.uiCloseModal:\r\n            \r\n            return{\r\n                ...state, \r\n                modalOpen: false\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux'; \r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth : authReducer\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarioApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n           <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarioApp } from './CalendarioApp';\nimport reportWebVitals from './reportWebVitals';\nimport   './styles.css'\nReactDOM.render(\n  <React.StrictMode>\n    <CalendarioApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}